----------------------------------------------------------------------------
Checklist for code reviewers?
- Does the module header explain understandably what the code does?
- Does the module header contain names of the authors and at least one contact email?
- Does the module header contain a year and a copyright notice?
- Are all import statements listed right after the header
- Are all imports done by explicitly importing names, and not *?
- Are constants listed right after the import statements?
- Are constants written in uppercase?
- Does each class have a docstring?
- Does each method have a docstring?
- Does each function have a docstring?
- Is the documentation understandable?
- Is the code free of long, congested blocks of code?
- Are the class and method names well-chosesn?
- Are the variable names well-chosen (no one-letter acronyms except for i in range(10):)?
- Is the code formatted in a consistent way?
- Are there code duplications?
- Are there code sections that should be replaced by calls to a standard module?
- Are there pieces of dead code that does nothing?
- Are there code sections that are unnecessarily long?
- Are there endless while loops?
- Are there break statements?
- Are there nested sections on the 4th level of indentation or deeper?
- Are there nested functions?
- Are recursive procedures described as such in the docstring?
- Do all methods/functions have one way to return data (EITHER by return value OR by modifying an object, not both).
- Are classes and functions clearly separated into exactly two sections?
- Is the order of methods/classes/functions bottom-up (small-scale classes first, and classes that use/wrap them after that).
- Does the module contain a __main__ section that is reasonably short?
- Are program options understandable?
- Is there only unindented code in the module body that is essential?